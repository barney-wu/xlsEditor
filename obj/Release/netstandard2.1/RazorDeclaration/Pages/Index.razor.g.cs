#pragma checksum "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\Pages\Index.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a3f4309bbab46ae29c92ffc793005259280c1ac9"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace myapp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using Microsoft.AspNetCore.Components.WebAssembly.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using myapp.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\_Imports.razor"
using BlazorInputFile;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\Pages\Index.razor"
using System.IO;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\Pages\Index.razor"
using myapp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\Pages\Index.razor"
using System.Windows;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 44 "C:\Users\wucha\Source\Repos\barney-wu\xlsEditor\Pages\Index.razor"
       
    string QueryStr;
    string csvStatus, xlsStatus;
    MemoryStream csvStream, xlsStream, outputStream;


    async Task HandleXlsSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            xlsStream = new MemoryStream();
            await file.Data.CopyToAsync(xlsStream);
    

            //outputStream = service.CreateExcel(ms, file.Name);
            QueryStr = queryService.CreateQuery(xlsStream, file.Name);

            xlsStatus = $"Finished loading Xlsx : {file.Name}";
        }
    }

    async Task HandleCsvSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            // Just load into .NET memory to show it can be done
            // Alternatively it could be saved to disk, or parsed in memory, or similar
            csvStream = new MemoryStream();
            await file.Data.CopyToAsync(csvStream);

            //outputStream = service.CreateExcel(ms, file.Name);
            //csvStream = service.MergeExcel(ms, file.Name);

            csvStatus = $"Finished loading Csv : {file.Name}";
        }
    }


    protected void mergeDocument()
    {
        //outputStream = service.CreateExcel(inputStream, fName);
        outputStream = mergeService.MergeExcel(csvStream, xlsStream);

    }

    protected async void downloadDocument()
    {
        await JS.SaveAs("Output.xlsx", outputStream.ToArray());
    }



#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private Microsoft.JSInterop.IJSRuntime JS { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private myapp.Data.MergeService mergeService { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private myapp.Data.QueryService queryService { get; set; }
    }
}
#pragma warning restore 1591
